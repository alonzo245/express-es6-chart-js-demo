{"version":3,"sources":["components/Graph/GraphOptions.js","components/Graph/GraphDatasets.js","components/Loader/Loader.js","components/Graph/Graph.js","App.js","index.js"],"names":["options","responsive","tooltips","mode","scales","xAxes","display","scaleLabel","show","labelString","yAxes","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Loader","className","Graph","useState","graphData","setGraphData","graphOptionsTitle","setGraphOptionsTitle","useEffect","axios","get","then","res","title","windSpeedList","data","map","item","rain","value","MaxSpeedValue","Math","max","apply","windSpeedDotsColor","moment","utc","sample_date","format","labels","text","GraphDatasets","label","pointBorderColor","catch","err","console","log","width","height","GraphOptions","App","ReactDOM","render","document","getElementById"],"mappings":"sRA2BiBA,EA3BD,CACZC,YAAY,EACZC,SAAU,CACRC,KAAM,SAERC,OAAQ,CACNC,MAAO,CACL,CACEC,SAAS,EACTC,WAAY,CACVC,MAAM,EACNC,YAAa,WAInBC,MAAO,CACL,CACEJ,SAAS,EACTC,WAAY,CACVC,MAAM,EACNC,YAAa,qBCDVE,EAnBE,CACbC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,CAAC,GACbC,iBAAkB,EAClBC,gBAAiB,QACjBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GCXLC,G,OAFA,kBAAO,yBAAKC,UAAU,YAAW,8BAAW,8BAAW,8BAAW,iC,gkBCMjF,IAoDeC,EApDD,WAAO,IAAD,EACgBC,mBAAS,MADzB,mBACXC,EADW,KACAC,EADA,OAEgCF,mBAAS,IAFzC,mBAEXG,EAFW,KAEQC,EAFR,KAgDlB,OA5CAC,qBAAU,WACRC,IAAMC,IAAI,wBACTC,MAAK,SAAAC,GACJ,IAAIC,EAAQ,GACRC,EAAgBF,EAAIG,KAAKC,KAAI,SAAAC,GAAI,OAAKA,EAAKC,KAAKC,MAAYF,EAAKC,KAAKC,MAAd,KACtDC,EAAgBC,KAAKC,IAAIC,MAAM,KAAMT,GACvCU,EAAqBZ,EAAIG,KAAKC,KAAI,SAAAC,GAEpC,OAAGA,EAAKC,KAAKC,QAAUC,GACrBP,EAAK,8BAA0BY,IAAOC,IAAIT,EAAKU,YAAYR,OAAOS,OAAO,WAClE,kBAEF,wBAGLC,EAASjB,EAAIG,KAAKC,KAAI,SAAAC,GACxB,OAAGA,EAAKC,KAAKC,MAAQ,EAAUM,IAAOC,IAAIT,EAAKU,YAAYR,OAAOS,OAAO,SACnE,GAAN,OAAUH,IAAOC,IAAIT,EAAKU,YAAYR,OAAOS,OAAO,SAApD,WAGFrB,EAAqB,CACnBM,MAAO,CACLnC,SAAS,EACToD,KAAMjB,KAIVR,EAAa,CACXwB,SACA9C,SAAU,CAAC,EAAD,GAEHgD,EAFG,CAGNC,MAAO,gBACPjB,KAAMD,EACNmB,iBAAkBT,UAKzBU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEb,IAEC/B,EACG,kBAAC,IAAD,CAAMW,KAAMX,EAAWkC,MAAO,IAAKC,OAAQ,IAAKnE,QAAO,GAAGoE,gBAAiBlC,KAD5D,kBAAC,EAAD,OC1CTmC,G,OAXH,WACV,OAAKvC,EAGH,yBAAKD,UAAU,gBACb,2EACA,kBAAC,EAAD,OALe,6CCArByC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f71486fe.chunk.js","sourcesContent":["const options = {\r\n    responsive: false,\r\n    tooltips: {\r\n      mode: 'label'\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          display: true,\r\n          scaleLabel: {\r\n            show: true,\r\n            labelString: 'Month'\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          display: true,\r\n          scaleLabel: {\r\n            show: true,\r\n            labelString: 'Rain Quantity'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  export default options;","const datasets = {\r\n    fill: true,\r\n    lineTension: 0.1,\r\n    backgroundColor: 'rgba(75,192,192,0.4)',\r\n    borderColor: 'rgba(75,192,192,1)',\r\n    borderCapStyle: 'butt',\r\n    borderDash: [1],\r\n    borderDashOffset: 0.0,\r\n    borderJoinStyle: 'miter',\r\n    pointBackgroundColor: '#fff',\r\n    pointBorderWidth: 5,\r\n    pointHoverRadius: 5,\r\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n    pointHoverBorderWidth: 2,\r\n    pointRadius: 5,\r\n    pointHitRadius: 5,\r\n}\r\n\r\nexport default datasets;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => (<div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>)\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport moment from 'moment'\r\nimport GraphOptions from './GraphOptions'\r\nimport GraphDatasets from './GraphDatasets'\r\nimport Loader from '../Loader/Loader'\r\nimport './Graph.css';\r\n\r\nconst Graph = () => {\r\n  const [graphData, setGraphData] = useState(null);\r\n  const [graphOptionsTitle, setGraphOptionsTitle] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/v1/weather/mock')\r\n    .then(res => {\r\n      let title = '';\r\n      let windSpeedList = res.data.map(item => !item.rain.value ? 0 : item.rain.value)\r\n      const MaxSpeedValue = Math.max.apply(null, windSpeedList)\r\n      let windSpeedDotsColor = res.data.map(item => {\r\n        \r\n        if(item.rain.value === MaxSpeedValue){\r\n          title = `Rainiest Time is at ${moment.utc(item.sample_date.value).format('HH:mma')}`;\r\n          return 'rgb(255, 0, 0)'; //red\r\n        }\r\n        return 'rgba(75,192,192,1)'; //turquoise\r\n      })\r\n\r\n      let labels = res.data.map(item =>  {\r\n        if(item.rain.value > 0) return moment.utc(item.sample_date.value).format('HH:mm')\r\n        return `${moment.utc(item.sample_date.value).format('HH:mm')} N/A`\r\n      })\r\n      \r\n      setGraphOptionsTitle({\r\n        title: {\r\n          display: true,\r\n          text: title\r\n        },\r\n      })\r\n\r\n      setGraphData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            ...GraphDatasets,\r\n            label: 'Rain Quantity',\r\n            data: windSpeedList,\r\n            pointBorderColor: windSpeedDotsColor,\r\n          }\r\n        ]\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, []);\r\n\r\n  if(!graphData) return <Loader />\r\n  return <Line data={graphData} width={500} height={350} options={{GraphOptions, ...graphOptionsTitle}} />\r\n}\r\n\r\nexport default Graph;\r\n","import React from 'react';\nimport Graph from './components//Graph/Graph';\nimport './App.css'\n\nconst App = () => {\n  if (!Graph) return <div>Loading...</div>\n\n  return (\n    <div className=\"graphWrapper\">\n      <h1>New York, New York City Rain Weather Report</h1>\n      <Graph />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}